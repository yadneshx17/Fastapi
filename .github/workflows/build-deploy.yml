name: Build and Deploy Code
on: [push, pull_request]

jobs:
  job1:
    environment: 
      name: Testing
    env:
      # DATABASE_HOSTNAME=localhost
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 25

    services:
      postgres:
        image: postgres
        env:
            POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
            POSTGRES_DB: ${{secrets.DATABSE_NAME}}_test
        ports:
          - 5432:5432 
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v4

      - name: Installing Python version 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' 
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: Install all dependencies
        run: pip install -r requirements.txt
      - name: test with python
        run:
          pip install pytest
          pytest
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_USERNAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          push: true 
          tags: ${{secrets.DOCKER_HUB_USERNAME}}/fastapi.latest